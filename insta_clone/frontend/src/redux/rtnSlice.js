import { createSlice } from "@reduxjs/toolkit"; // import createSlice function from Redux Toolkit to create a slice for real-time notification state management

const rtnSlice = createSlice({ // define a constant rtnSlice by calling createSlice to manage real-time notifications like likes and dislikes
    name: 'realTimeNotification', // assign the slice name 'realTimeNotification' to identify it within the Redux store

    initialState: { // define the initial state object for notifications
        likeNotification: [], // initialize likeNotification as an empty array to store notifications related to likes
    },

    reducers: { // define an object of reducer functions to modify parts of the notification state
        setLikeNotification: (state, action) => { // define a reducer setLikeNotification that takes state and action to update like notifications based on the type of interaction
            if (action.payload.type === 'like') { // check if the payload type is 'like' to handle new like events
                state.likeNotification.push(action.payload); // push the payload object into the likeNotification array to add a new like notification
            }

            else if (action.payload.type === 'dislike') { // check if the payload type is 'dislike' to handle removal of like notifications
                state.likeNotification = state.likeNotification.filter( // reassign likeNotification to a filtered array excluding the disliked user's notification
                    (item) => item.userId !== action.payload.userId // use filter to keep only items where userId does not match the payload userId
                );
            }
        }
    }
});

export const { setLikeNotification } = rtnSlice.actions; // export the auto-generated action creator for setting like notifications

export default rtnSlice.reducer; // export the reducer generated by createSlice to integrate into the Redux store
