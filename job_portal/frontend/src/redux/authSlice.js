import { createSlice } from "@reduxjs/toolkit"; // import the createSlice function from Redux Toolkit to define a Redux slice that manages a specific piece of global state

const authSlice = createSlice({ // define a constant named authSlice by calling createSlice to create a slice for authentication-related state
    name: "auth", // specify the name of the slice as 'auth' to label this section of the Redux state tree
    
    initialState: { // define the initial state object for the authentication slice
        loading: false, // initialize the loading property as false to indicate that no authentication process is active initially
        user: null // initialize the user property as null to indicate that no user is currently logged in
    },
    
    reducers: { // define an object containing reducer functions to modify the state in response to dispatched actions
        setLoading: (state, action) => { // define a reducer function setLoading with arguments state (current auth state) and action (object containing payload data)
            state.loading = action.payload; // update the loading property with the value provided in action.payload to reflect loading status
        },
        
        setUser: (state, action) => { // define a reducer function setUser with arguments state (current auth state) and action (object containing payload data)
            state.user = action.payload; // update the user property of the state with the value provided in action.payload to store the logged-in user data
        }
    }
});

export const { setLoading, setUser } = authSlice.actions; // export the action creators setLoading and setUser that are automatically generated by createSlice for dispatching actions
export default authSlice.reducer; // export the reducer function of authSlice as the default export to include in the Redux store configuration
